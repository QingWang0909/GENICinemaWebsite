<?php

/**
 * This Class defines 
 * 	1) the process the hashcode the user password so that the password stored in Database is not plaintext, for security purpose
 *  2) the process to check if user inputs correct password
 * 
 */

include_once 'SessionStart.php';

final class PwdHasher
{
	
	private function __construct() { }
	
	private static $blowfish_algo = '$2a';
	private static $cost = '$10';
	
	/**
	 * Generate hashcode based on a given user password
	 * 
	 * @param $pwd
	 * @return string
	 */
	public static function generateHashCode( $pwd )
	{
		
		$hashcode = "";
		$salt = substr(sha1(mt_rand()), 0, 22);
		$hashcode = crypt($pwd, self::$blowfish_algo . self::$cost . "$" .  $salt);
		
		return $hashcode;
		
	}
	
	/**
	 * This function will
	 * 	1) Generate a new hashcode based on user login input password 
	 * 	2) Compate the new hashcode with the hashcode stored in DB, if they are the same then the user enters the *correct* password  
	 * 
	 * @param $hashcode
	 * @param $password
	 * @return boolean|number
	 */	
	
	public static function hashcodeCheck($hashcode, $password)
	{
		
		$full_salt = substr($hashcode, 0, 29);
		
		// because input $full_salt was generated by crypt and stored in DB as a hashcode
		// therefore crypt can recognize the blowfish algorithm and its cost and other information from $full_sault
		// so the $new_hashcode will generate based on user password by the same rules that generate other hash code 
		$new_hashcode = crypt($password, $full_salt);
		
		//die(var_dump($hashcode));
		//die(var_dump($new_hashcode));
		
		if( $new_hashcode == $hashcode ){
			return true;
		}
		else{
			return -1;
		}
		
	}	
	
}

?>